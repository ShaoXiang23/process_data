# -*- coding: utf-8 -*-

'''
This code aim to resize image's shape and keep its ratio(width and height) at the same time.
Sth important: PIL as tool to open image.
'''

from PIL import Image
 
class image_aspect():
 
    def __init__(self, image_file, aspect_width, aspect_height):
        self.img = Image.open(image_file)
        self.aspect_width = aspect_width
        self.aspect_height = aspect_height
        self.result_image = None
 
    def change_aspect_rate(self):
        img_width = self.img.size[0]
        img_height = self.img.size[1]
 
        if (img_width / img_height) > (self.aspect_width / self.aspect_height):
            rate = self.aspect_width / img_width
        else:
            rate = self.aspect_height / img_height
 
        rate = round(rate, 1)
        print(rate)
        self.img = self.img.resize((int(img_width * rate), int(img_height * rate)))
        return self
 
    def past_background(self):
        self.result_image = Image.new("RGB", [self.aspect_width, self.aspect_height], (0, 0, 0, 255))
        self.result_image.paste(self.img, (int((self.aspect_width - self.img.size[0]) / 2), int((self.aspect_height - self.img.size[1]) / 2)))
        return self
 
    def save_result(self, file_name):
        self.result_image.save(file_name) 

# samples:
# old / new_image_path: '~/images/pic.jpg'.
# 1024 in here means new shape.
image_aspect("old_image_path", 1024, 1024).change_aspect_rate().past_background().save_result("new_image_path")

